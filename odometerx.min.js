class OdomterX{constructor(t={}){"object"==typeof t?(t={transition:.2,height:9.1,...t},this.transition=t.transition,this.height=t.height,$("body").after('<style type="text/css">#number{font-size:20px;font-family:arial;}.odo{display:flex;align-items:center;overflow:hidden;}.odo .column{transform:translateY(0px);transition:0.2s}.odo .hide{opacity:0;}.pr{position:relative;}.pa{position:absolute;}</style>')):console.log("Option should be object")}update(t,i,n=!1){let e=$(t).attr("val");void 0===e&&(e="0".repeat(i.length),n=!0),"number"==typeof i&&(i=i.toString()),$(t).attr("val",i),i=i.split(""),e=e.split(""),i.length==e.length&&i.indexOf(".")==e.indexOf(".")||(n=!0),i=i.map((i,s)=>{if(n)return this.block(t,i,e[s],s);this.block(t,i,e[s],s,!0)}),n&&$(t).html(i.join(""))}block(t,i,n=null,e,s=!1){let d=parseInt(i);return isNaN(d)?`<div class='each'>${i}</div>`:(null==n&&(n=0),this.css(t,e,d,n),s?void 0:`<div class='each pr' d-index='${e}'><div class='hide'>${i}</div><div class='column pa'><div class='hide'>0</div><div>0</div><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div></div></div>`)}css(t,i,n,e){e=parseInt(e),setTimeout(()=>{$(`${t} .each[d-index='${i}'] .hide`).text(n),$(`${t} .each[d-index='${i}'] .column`).css({transform:`translateY(${-1*this.height*(n+2)}%)`,transition:(null!=e?Math.abs(n-e):1)*this.transition+"s"})},30)}}

/*
Include jquery
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

Include the JavaScript file
<script src="odometerx.min.js"></script>


//Inittialize the class
let odo = new OdomterX();

//call the update function
//First parameter is jQuery selector, and second parameter is value (either number or string)
odo.update("#number",51.9)

*/
